# services containers settings

services:

  # eureka server container settings

  discovery-server:
    build: discovery-server/
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - book_library_network

  # config server container settings

  config-server:
    build: config-server/
    ports:
      - "8080:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 50s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - book_library_network

  # gateway server settings

  #  gateway-server:
  #    build: gateway-server/
  #    ports:
  #      - "8888:8888"
  #    depends_on:
  #      config-server:
  #        condition: service_healthy
  #    healthcheck:
  #      test: [ "CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1" ]
  #      interval: 30s
  #      timeout: 10s
  #      retries: 5
  #      start_period: 50s
  #    deploy:
  #      resources:
  #        limits:
  #          memory: 512M
  #    networks:
  #      - book_library_network

  # parser settings

  parser-service:
    build: services/parser-service/
    ports:
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    depends_on:
      discovery-server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network

  # auth service settings

  auth-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_auth_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_auth_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5400:5432"
    networks:
      - book_library_network

  auth-service:
    build: services/auth-service/
    ports:
      - "9100:9100"
    depends_on:
      auth-service-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9100/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network

  # book service containers settings

  library-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_library_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_library_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5450:5432"
    networks:
      - book_library_network

  library-service:
    build: services/library-service/
    ports:
      - "9200:9200"
    depends_on:
      library-service-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network


  # image service settings

  media-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_media_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_media_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5500:5432"
    networks:
      - book_library_network

  media-service:
    build: services/media-service/
    ports:
      - "9300:9300"
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    depends_on:
      feedback-service-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9300/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network

  feedback-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_feedback_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_feedback_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5550:5432"
    networks:
      - book_library_network

  feedback-service:
    build: services/feedback-service/
    ports:
      - "9400:9400"
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    depends_on:
      feedback-service-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9400/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network

  userprofile-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_userprofile_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_userprofile_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5600:5432"
    networks:
      - book_library_network

  userprofile-service:
    build: services/userprofile-service/
    ports:
      - "9500:9500"
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    depends_on:
      userprofile-service-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9500/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network


# network settings
networks:
  book_library_network:
    driver: bridge


# commands to build a service './gradlew :services:library-service:build' or build all services ./gradlew build
# to run system 'docker-compose up -d'
# stop and delete all containers and images 'docker-compose down --rmi all'
# show containers docker ps
