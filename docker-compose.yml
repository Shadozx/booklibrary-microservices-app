#version: "3.3"

#services:
#  eureka-server:
#    build: eureka-server/
#    ports:
#      - "8761:8761"
#    networks:
#      - docker_network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  config-server:
#    build: config-server/
#    ports:
#      - "8080:8080"
#    depends_on:
#      - eureka-server
#    networks:
#      - docker_network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  author-service:
#    build: services/author-service/
#    ports:
#      - "9085:9085"
#    depends_on:
#      - config-server
#    networks:
#      - docker_network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:9085/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#networks:
#  docker_network:
#    driver: bridge

#version: '3.8'

services:
  eureka-server:
    build: eureka-server/
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - book_library_network


  config-server:
    build: config-server/
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 50s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - book_library_network

  author-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_author_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_author_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5432:5432"
    networks:
      - book_library_network

  author-service:
    build: services/author-service/
    ports:
      - "9085:9085"
    depends_on:
      author-service-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9085/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network


  bookcatalog-service-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_bookcatalog_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book_library_bookcatalog_service_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "5433:5432"
    networks:
      - book_library_network

  bookcatalog-service:
    build: services/bookcatalog-service/
    ports:
      - "9099:9099"
    depends_on:
        bookcatalog-service-db:
          condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9099/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - book_library_network


networks:
  book_library_network:
    driver: bridge

#  book-server:
#    build: services/book-service/
#    ports:
#      - "9090:9090"
#    depends_on:
#      config-server:
#        condition: service_healthy